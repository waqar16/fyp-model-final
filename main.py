from mtcnn import MTCNN
from facenet_pytorch import InceptionResnetV1
import cv2
import torch
# import sys
from torchvision import transforms
import os
import numpy as np

# # Initialize the MTCNN detectorpython main.py 
detector = MTCNN()

# # Path to your image folder
image_folder = 'Database_of_Images'

# # List to store detected faces
faces = []

# # Loop through images and detect faces
for filename in os.listdir(image_folder):
    img = cv2.imread(os.path.join(image_folder, filename))
    
    # Detect faces using the MTCNN detector
    result = detector.detect_faces(img)
    
    if result:
        for face_info in result:
            x, y, width, height = face_info['box']
            face = img[y:y+height, x:x+width]
            faces.append(face)


new_img = cv2.imread('Test_database/shahrukh.jpg')
# new_img = cv2.imread('https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.smartprix.com%2Fbytes%2Fshah-rukh-khan-becomes-brand-ambassador-of-realme-india%2F&psig=AOvVaw0DDArcPP8mSGgTEd6uCq4a&ust=1708300110452000&source=images&cd=vfe&opi=89978449&ved=0CBIQjRxqFwoTCJjK9vvHs4QDFQAAAAAdAAAAABAE')
new_result = detector.detect_faces(new_img)


# # Check if a face was detected
if new_result:
    # Get the coordinates of the first detected face
    x, y, width, height = new_result[0]['box']

    # Extract the face region from the image
    detected_face = new_img[y:y+height, x:x+width]

    # Now, 'detected_face' contains the pixel values of the detected face
else:
    print("No face detected in the image.")



# # Initialize the pre-trained InceptionResnetV1 model
resnet = InceptionResnetV1(pretrained='vggface2').eval()

# # Define the transformation to apply to your face images
transform = transforms.Compose([transforms.ToPILImage(),transforms.Resize((160, 160)),transforms.ToTensor(), transforms.Normalize(mean=[0.5, 0.5, 0.5], std=[0.5, 0.5, 0.5]),])

# encodings = []
# for image in faces:
#     image = transform(image)
#     image = image.unsqueeze(0)
#     image = np.around(image, decimals=12)
#     encoding = resnet(image)
#     encoding /= torch.norm(encoding, p=2)
#     encodings.append(encoding)
#     print(encoding)

image_new = transform(detected_face)
image_new = image_new.unsqueeze(0)
image_new = np.around(image_new, decimals=12)
new_encoding = resnet(image_new)
new_encoding /= torch.norm(new_encoding, p=2)
# print(new_encoding)
threshold = 0.999999

encodings=["tensor([[ 1.0841e-01, -7.0243e-02, -3.4946e-02, -1.3120e-02, -1.2387e-02,3.9566e-02, -7.7514e-03,  4.0502e-02, -1.1059e-01,  3.8658e-02,-1.2781e-01,  5.4895e-02, -3.6980e-02,  1.8506e-02,  2.0488e-02,-4.8069e-02,  2.7709e-02, -6.7145e-03,  3.1633e-02, -2.1382e-02,-6.7163e-02,  2.5192e-02, -1.6633e-02,  3.5298e-02,  4.4984e-02,-5.0507e-02, -7.4098e-03,  2.3144e-02,  4.2166e-02,  7.5354e-03,7.2393e-03, -6.4728e-02, -2.4240e-02, -3.6190e-02, -2.7076e-02,-5.6266e-02, -5.7046e-02,  4.9315e-02, -1.3348e-02, -1.4580e-03,-3.1100e-02,  5.8064e-02, -1.8409e-02, -1.1838e-02,  3.3445e-02,8.8474e-03,  1.1731e-02, -9.6873e-02,  1.3222e-02,  1.3063e-02,9.0476e-04, -4.7644e-02,  2.9208e-02,  2.4029e-02, -4.8338e-02,2.3521e-02,  6.9829e-03,  3.5821e-03,  4.0321e-02, -9.9172e-03,-3.3934e-02, -1.6155e-02,  3.8090e-02,  1.3759e-02,  1.9831e-02,4.4089e-02,  8.3298e-02, -1.1308e-02,  3.1715e-02, -1.1163e-03,-1.5864e-02, -2.1164e-02,  2.9743e-02,  3.6862e-02, -7.4032e-02,3.4361e-02,  3.4366e-02, -4.2524e-02,  9.3934e-02,  2.3662e-02,5.3797e-02,  2.8635e-02,  2.9683e-02,  5.1484e-02, -2.5305e-03,1.1737e-02, -8.0330e-02, -3.5600e-02, -1.3630e-03, -3.0629e-02,4.8438e-02,  1.2457e-02,  4.1567e-02, -3.7652e-02, -5.2145e-02,-5.4352e-02, -6.1140e-02, -2.2993e-02,  5.6712e-03, -3.5218e-03,3.1876e-02,  1.3241e-02,  4.3976e-02, -3.7932e-02,  3.2666e-02,4.8100e-02, -6.5578e-02, -6.2269e-02, -2.4520e-02, -6.0024e-02,-7.6717e-02,  1.5112e-02, -2.3563e-02,  2.7562e-02,  1.9693e-02,4.1875e-03,  2.1853e-02, -2.8113e-02,  1.1689e-02, -2.3016e-02,-5.4140e-02,  2.6653e-02,  2.3825e-02, -7.8638e-02,  2.7593e-02,3.7624e-02,  1.4826e-03, -3.1327e-02,  2.9756e-02,  6.5255e-02,-3.9590e-02, -1.6223e-02, -1.9977e-02,  4.0646e-02, -3.9584e-02,-6.8165e-02, -3.2764e-02,  2.2244e-02,  9.7026e-02, -3.9219e-02,-3.4365e-02,  5.0476e-02,  6.8727e-02, -9.5556e-03, -1.7165e-02,3.0443e-02, -3.1297e-02, -5.7161e-02,  3.7358e-02,  4.2074e-02,-1.2840e-02, -3.1012e-02,  8.1533e-04,  5.1248e-02,  4.4722e-03,-7.3793e-03,  3.0662e-03, -4.1632e-02, -3.5724e-02, -2.2311e-02,-3.8121e-02, -3.6328e-02,  1.4403e-02, -3.8660e-02,  1.1899e-02,5.4816e-02, -1.6969e-02, -6.1659e-03,  1.6730e-02,  1.9410e-02,-5.3920e-02, -3.8649e-02, -1.2960e-02,  6.1332e-02, -1.5281e-02,1.1430e-02,  8.4763e-02,  5.1705e-02,  2.6221e-02, -2.7791e-02,-1.0838e-02, -5.3983e-02,  2.8150e-02, -4.6367e-02, -3.1418e-03,-6.2637e-02,  2.1303e-02, -4.0030e-02,  4.0567e-02, -3.5994e-02,2.2121e-02,  2.9018e-02,  1.3033e-02,  5.0270e-02,  9.5258e-03,9.2179e-02,  2.2251e-02,  1.6650e-02,  4.3029e-02,  1.9875e-02,-4.8015e-02,  6.9068e-02,  2.0278e-02, -1.3743e-02,  2.7828e-02,-1.2092e-03,  3.9685e-02,  8.7637e-02,  7.1859e-02,  6.8689e-03,-6.0070e-02,  3.5408e-02, -7.5438e-02,  7.6255e-02,  4.7189e-03,-3.7152e-03, -3.5392e-02, -1.7343e-02, -1.0277e-01,  8.6529e-02,-4.3410e-02,  7.6732e-02,  3.2127e-02,  6.0031e-02, -2.7115e-02,-4.6882e-02, -2.3208e-02, -3.3032e-02,  2.5168e-02,  1.2329e-02,3.5178e-02,  2.2029e-03,  4.5472e-02, -7.1683e-02, -2.9241e-02,-8.4066e-02,  4.0607e-02,  1.0798e-02,  7.4223e-04, -4.7411e-02,4.4629e-02, -4.5445e-02, -2.4267e-02,  3.0678e-02, -5.8233e-02,-4.7536e-02, -1.5082e-03, -5.4325e-02, -7.1082e-02,  4.2155e-02,6.6755e-02,  6.1826e-02, -2.2278e-02,  4.8894e-02, -5.9165e-02,-4.9961e-02,  2.9224e-03,  4.6230e-02, -6.0398e-02, -4.3243e-02,3.4639e-02,  4.8411e-02, -1.1762e-02, -4.2107e-02,  1.5704e-02,3.6946e-02,  1.9235e-02, -1.4100e-02, -1.7101e-02,  2.0175e-02,-2.7229e-02, -3.7794e-02,  1.3502e-02, -3.8447e-02, -1.3329e-01,-1.6097e-02, -7.7600e-04, -5.2011e-02,  5.5661e-02,  3.6251e-03,4.7474e-02,  4.2443e-02, -9.6884e-02,  1.6107e-02,  1.7911e-02,5.4287e-02, -2.8862e-02,  3.2492e-03,  6.7584e-02, -1.0187e-02,-8.0224e-02,  1.5852e-02,  2.6816e-02,  2.1154e-02,  6.4765e-02,-1.3944e-02, -9.3150e-03,  4.6500e-02, -2.4336e-02, -9.6991e-05,7.1894e-02, -1.4750e-02,  2.8820e-02, -3.3776e-02, -2.8284e-02,-4.2622e-03,  9.3084e-03, -1.9665e-02, -3.2838e-02,  5.9047e-02,-3.1017e-03, -5.0271e-04, -3.5087e-02,  8.2415e-02, -8.2773e-03,-4.1109e-02, -5.4525e-02, -4.1899e-04, -3.2680e-02,  4.7435e-02,8.1349e-02, -1.2568e-02,  6.7687e-02, -1.5319e-02,  1.4582e-02,-7.0393e-03, -3.7988e-02, -1.0072e-01, -7.8340e-02, -4.7346e-02,7.8204e-03, -3.0275e-03, -2.2328e-02, -6.3799e-02, -5.2464e-03,-2.9546e-02, -4.9108e-02,  1.3753e-02, -9.5904e-03,  6.1838e-02,-2.6368e-02,  6.9701e-02,  1.1551e-03, -2.7137e-02, -4.5523e-02,-1.6733e-04, -3.6209e-02, -5.2241e-02,  6.1614e-02,  4.9006e-02,1.9728e-02, -6.1925e-03, -4.1306e-02, -6.6824e-02, -9.7406e-02,-6.8012e-03,  1.0102e-02,  1.1661e-02, -3.2940e-02, -1.4841e-02,-1.0223e-02, -2.2637e-02,  1.2454e-02,  1.3988e-01,  5.3729e-02,2.0382e-02,  9.4038e-02,  2.6072e-02,  2.9823e-02,  7.4007e-02,-3.5889e-02,  2.2617e-02,  3.6691e-02,  6.7718e-03, -1.8309e-02,-9.3189e-03, -8.1828e-02, -4.3180e-02,  6.3188e-02, -5.9982e-02,2.1798e-02, -1.6442e-02, -5.7257e-02, -1.0768e-02, -4.5277e-02,6.9439e-02,  3.8549e-02, -2.1904e-02, -1.2586e-02, -4.9370e-02,2.6842e-02,  7.1364e-03,  3.2785e-03,  4.7306e-03,  3.6188e-02,1.0787e-01, -9.0227e-03, -3.8687e-02,  1.4087e-02,  2.3237e-02,-3.7510e-02,  5.7636e-02, -2.2262e-02,  3.8402e-02,  3.3636e-02,-6.7546e-02, -1.2909e-02, -1.2695e-02, -1.4616e-02,  2.2244e-03,-1.4535e-02,  4.8500e-03, -1.1001e-02, -2.3150e-02,  5.4405e-02,3.7057e-03,  1.8550e-02, -4.3625e-02,  1.7236e-02,  1.1097e-02,-9.4620e-02,  5.0786e-02,  1.9503e-03,  3.8844e-02,  3.4312e-02,-3.7236e-02,  1.0851e-02,  6.2131e-02, -5.8410e-03,  2.1763e-02,2.6321e-02,  1.8817e-02, -1.3976e-02, -2.9973e-02, -9.8583e-03,9.3909e-03,  2.8227e-02,  6.7694e-03,  7.5830e-02,  1.2155e-02,-2.3358e-02, -1.3693e-01, -1.7893e-02, -3.8124e-02, -5.5168e-03,6.4853e-02,  2.2509e-02,  2.7335e-02, -4.3077e-02, -7.1239e-02,2.5117e-02,  5.8746e-02, -1.9973e-02, -2.5372e-02,  4.0458e-02,2.7849e-02,  9.7839e-03, -3.0451e-02, -4.8007e-02, -2.8206e-02,-2.2106e-02, -2.4986e-02,  1.4187e-02,  4.4049e-02, -6.7640e-02,-8.3796e-02,  1.7403e-02,  8.3702e-03, -4.7391e-02, -8.2283e-03,-3.8260e-03,  2.6304e-02,  5.6869e-02,  4.5024e-02,  6.5697e-03,-5.3880e-02,  3.0831e-02, -9.6348e-02, -2.6392e-02,  3.8142e-02,-6.4875e-03,  1.2905e-02,  3.3656e-02, -3.3193e-02,  6.8885e-02,6.5379e-03, -1.1992e-01, -5.8330e-02,  3.0665e-02,  1.1112e-01,-3.8452e-02, -8.5732e-02,  6.7949e-03, -3.5161e-02, -6.7181e-02,-9.7063e-02,  9.0268e-02, -1.4945e-02, -8.4853e-02,  7.4741e-02,8.2698e-02,  1.3306e-02, -3.6243e-02,  4.2728e-02, -1.5084e-02,1.1914e-02, -2.3886e-02,  1.0947e-01, -3.3137e-02,  5.4590e-03,-4.9850e-02, -5.4645e-02]]),grad_fn=<DivBackward0>"
,"tensor([[ 3.5458e-02,  1.2550e-02,  1.1283e-02,  3.8335e-03, -4.7825e-02,2.1843e-03, -4.2072e-02,  6.3538e-02,  1.1299e-01, -4.0226e-02,-6.3857e-02, -8.5977e-03,  7.4510e-02,  8.7783e-03, -4.2549e-02,-3.2297e-02,  5.4038e-02, -3.3621e-02,  7.7246e-02, -8.2103e-02,1.3151e-02, -7.7223e-03,  1.9489e-02,  6.2573e-02,  6.2253e-02,8.7338e-03, -2.5573e-02,  2.3964e-02, -5.5633e-03, -4.7337e-03,-4.8510e-02, -1.9864e-02,  5.9042e-05, -8.2033e-02,  4.9202e-02,8.0942e-02, -2.7988e-02,  4.9416e-02,  1.8009e-02, -5.4921e-03,-8.1925e-03,  1.9751e-02,  2.3697e-02, -7.9987e-02, -3.2962e-02,6.6288e-02, -1.2478e-03, -3.8414e-02,  3.0724e-02, -4.0641e-02,5.7924e-02,  2.0158e-02, -4.2438e-02,  2.3997e-02, -2.7075e-02,2.9804e-02,  8.5001e-02, -2.7060e-02,  6.0290e-03, -7.6252e-02,-9.1655e-02, -5.4224e-02, -5.0672e-02,  2.8799e-02, -5.0467e-02,1.9502e-03,  1.9083e-02,  4.7926e-02,  4.6467e-02, -1.9847e-02,3.8801e-02, -1.9868e-02, -4.2871e-02, -1.7130e-02,  1.9427e-02,-7.0436e-02, -5.8860e-02,  4.6704e-02, -7.7025e-02, -1.5177e-03,3.3369e-03, -1.9405e-02,  5.8282e-02, -5.6883e-02, -6.8686e-02,9.7134e-02, -1.0264e-02, -8.6262e-02,  1.4356e-02,  5.1780e-02,-3.1864e-02,  6.0085e-02,  1.2040e-02, -1.0747e-02,  1.2263e-02,6.3004e-02,  5.9084e-03, -5.4437e-02, -2.4082e-02, -2.7592e-02,-6.0817e-02, -1.6341e-02,  1.9491e-04, -3.3842e-02, -1.0510e-03,-1.4374e-02, -4.3989e-03, -1.5712e-02,  4.8364e-03,  4.7206e-02,-1.8347e-02, -1.3007e-02,  2.6240e-02, -6.5563e-03, -1.4642e-02,-4.0859e-02,  3.7553e-02,  1.5627e-02, -2.5866e-02,  2.0075e-03,-4.3940e-02,  1.3403e-02, -3.1519e-02, -8.4294e-02,  5.2264e-02,6.2356e-03,  1.0234e-02,  6.2452e-02, -7.6655e-02, -4.7126e-02,7.4088e-03,  6.9741e-02, -6.1071e-02,  7.2684e-03,  6.2625e-02,9.7339e-02, -4.9778e-02,  1.3138e-02,  4.3532e-02, -1.6805e-02,-4.7834e-02, -1.4433e-02,  5.7036e-02, -2.9001e-02,  3.0995e-02,2.9155e-03,  4.2440e-02,  4.3951e-02,  2.6991e-02, -1.1470e-02,6.4400e-02, -3.2472e-02,  6.4020e-02,  6.0599e-02, -3.4501e-02,8.9044e-02,  5.0231e-02,  2.0780e-02,  9.6870e-02, -1.1721e-02,-1.1635e-02,  1.8603e-02, -4.3030e-02, -6.3191e-03, -1.1208e-02,-2.0939e-02,  3.6600e-02, -7.9043e-02, -6.9697e-03,  4.0841e-02,-7.7936e-03,  1.1196e-02,  2.6295e-02,  1.1331e-03,  6.2889e-02,-2.6494e-03, -1.3748e-02, -3.7412e-02, -1.1510e-03, -5.4387e-02,-1.0810e-02, -8.0914e-03, -7.3272e-02,  2.7209e-02, -4.1079e-02,6.5259e-02, -3.2139e-03,  4.3149e-02,  3.8720e-02,  7.3074e-03,5.2389e-02,  4.8293e-02, -6.3559e-02, -1.0747e-02, -2.2107e-02,-2.3135e-02,  7.1834e-03, -2.2488e-02, -2.3045e-02, -3.0971e-02,-4.1046e-02,  6.5605e-02,  1.8365e-02,  8.1746e-02,  4.0645e-02,5.2422e-02, -1.1787e-02, -2.0411e-02,  4.5087e-02, -4.1950e-02,2.2871e-02,  3.3030e-02, -5.9949e-03, -9.6611e-03,  4.7691e-02,-5.3418e-02, -2.7209e-03, -7.1938e-02,  2.1215e-02,  2.5763e-03,6.5168e-02, -4.4948e-02, -6.3908e-02, -1.2956e-02, -8.8764e-02,3.1092e-03, -8.5081e-02,  1.1213e-02,  2.8239e-02, -4.5746e-02,2.7887e-02,  1.6384e-02,  3.6347e-02,  4.7350e-02,  3.3930e-02,-1.0776e-02,  3.5947e-02, -5.4114e-02, -4.2909e-03,  1.5389e-02,-1.9897e-02,  6.5679e-02,  2.2415e-02, -3.1089e-02, -7.0230e-02,-1.0418e-02, -5.9708e-03, -4.3502e-03, -3.2905e-02,  4.3241e-02,-1.0353e-02, -7.5061e-02,  1.8071e-02,  3.1073e-02,  1.6589e-02,1.1502e-02,  5.6311e-02, -1.2668e-01, -5.0615e-02, -2.1679e-02,-1.7343e-02,  3.0610e-02,  4.9147e-02, -4.5343e-02, -2.8737e-02,-2.2044e-02, -2.4464e-02,  7.9226e-03, -5.3489e-02,  4.7764e-02,-4.4785e-02,  7.9690e-02,  3.2808e-02,  1.2224e-02, -1.8620e-02,-5.1744e-02, -1.1562e-02, -2.1420e-02,  3.6029e-02, -3.5267e-02,-5.3309e-02, -1.3003e-02,  5.7611e-02, -5.5843e-03, -2.1051e-02,1.4777e-02,  3.1859e-02,  3.2619e-02, -5.6900e-02, -1.4257e-02,5.2372e-02,  1.3847e-02,  9.0826e-03, -1.1750e-02, -1.0003e-02,-8.2729e-02,  4.1056e-02,  5.9807e-02,  2.6313e-02, -3.4975e-02,-5.6923e-02, -2.8823e-02, -4.8553e-02, -1.1897e-02, -2.2864e-02,-2.9375e-02, -2.9086e-02, -9.6704e-03,  1.3816e-01,  1.4249e-02,-1.4633e-02, -2.9960e-02, -6.7462e-02, -3.2933e-02, -2.3195e-02,-1.2496e-02,  9.5332e-02,  3.5963e-02,  3.7826e-02, -1.8490e-02,3.7951e-02,  1.3868e-02,  5.3028e-02, -6.9453e-02, -5.5871e-02,7.1927e-02, -2.7542e-02, -6.5545e-02,  4.2163e-02, -4.8356e-02,-3.2985e-02,  1.0213e-03,  1.0332e-01, -5.3731e-02, -1.1225e-02,1.9175e-02, -3.2019e-02,  4.7365e-02,  6.4533e-02, -2.7076e-02,-8.4523e-03, -1.6667e-02, -6.1345e-02, -2.8524e-02,  9.8198e-03,-3.7883e-02,  5.2734e-02,  4.1490e-02, -5.7408e-03, -4.9297e-02,1.8166e-02,  4.2752e-02, -5.3801e-02, -2.2795e-02, -6.6696e-03,-9.6717e-02,  3.3510e-02,  2.5223e-02, -5.8112e-02, -2.2359e-02,8.8286e-02,  3.8278e-02,  4.6021e-02,  4.6303e-02,  6.8691e-02,-4.0907e-02,  6.3755e-02, -2.3312e-02,  4.8329e-02,  2.6947e-02,-5.4934e-02,  1.5158e-02, -1.1846e-02, -4.1165e-02, -1.2150e-02,-1.8905e-02,  2.1776e-02, -2.6013e-02, -3.5499e-02,  2.2430e-02,-2.4842e-02,  6.8219e-03,  4.1331e-02,  6.7529e-02,  1.0786e-02,-4.7137e-03, -9.0942e-02,  2.1537e-02, -1.2441e-02, -6.1909e-02,-7.7485e-04,  3.2435e-02,  4.6304e-02,  4.5486e-02, -3.3000e-02,-2.7655e-02,  6.3651e-02, -7.8823e-03,  2.6871e-03,  4.0486e-02,8.7082e-03, -5.5141e-02, -6.2008e-02,  5.8874e-02,  7.4536e-02,-2.8742e-02, -9.4083e-03,  1.0897e-01, -1.0219e-02, -4.1511e-02,-2.8329e-02, -2.4082e-02, -2.7765e-02,  2.4263e-02,  4.1680e-03,2.0773e-02,  4.1478e-02, -4.5941e-02, -4.7591e-03,  3.9448e-02,1.1806e-03,  2.5930e-02,  2.7900e-02, -5.3414e-03, -7.3486e-02,-2.6726e-02, -1.6919e-02, -3.3551e-02, -3.5575e-02, -3.2947e-02,3.6650e-02,  7.7379e-03,  2.3079e-02,  8.5531e-02,  7.0176e-02,2.7011e-02,  2.5965e-02, -2.2054e-02,  4.3973e-02, -5.8244e-02,6.4263e-02, -8.0625e-03,  1.3672e-01,  1.8026e-02,  6.3958e-02,1.1084e-02, -2.2595e-02,  1.0212e-02,  1.9516e-02,  5.4662e-02,-1.2253e-01,  3.7352e-02, -2.1556e-03, -2.9831e-02,  6.1797e-03,6.1446e-02,  1.4381e-02, -8.3379e-03, -3.4004e-03, -3.9437e-02,-4.3059e-02, -1.0315e-02, -4.1374e-02, -2.0288e-02, -4.8403e-02,-4.4955e-02, -6.8177e-02,  5.4816e-02,  4.6674e-04,  2.5670e-02,3.3534e-02, -4.2428e-02, -3.6665e-03,  9.0251e-02,  8.6802e-02,3.7040e-02, -7.4717e-03, -1.7635e-02, -4.4833e-03,  3.0450e-03,5.2153e-03, -1.5598e-02,  2.2383e-02, -8.3555e-02, -5.2754e-02,1.5644e-02,  1.9639e-02,  9.0513e-02, -2.4092e-02,  3.8168e-02,7.4934e-02, -3.5352e-02,  7.4985e-02,  1.4220e-03,  3.5340e-02,8.8028e-02, -1.1280e-02, -1.2686e-03, -7.0980e-03, -1.4110e-02,1.0133e-01, -6.6513e-02,  7.8046e-02,  3.1167e-03,  9.2663e-02,4.1169e-02, -4.9540e-02, -1.3094e-02,  4.2256e-02,  7.4531e-03,-7.8965e-02,  3.9015e-02]]),grad_fn=<DivBackward0>"
,"tensor([[-1.4178e-02, -6.6482e-02, -4.1319e-02,  1.4206e-02,  3.9303e-02,5.1080e-05,  5.8211e-02, -3.1527e-02,  3.0404e-02,  1.2741e-02,-5.7871e-02,  1.6098e-02, -2.0156e-02, -5.0360e-03,  9.7436e-03,-1.8991e-02, -2.5871e-02,  1.0580e-01, -7.6062e-03,  9.3460e-02,-4.9617e-02,  7.7413e-02,  3.5956e-02,  2.1783e-02,  2.2862e-02,8.1754e-02, -2.6273e-02, -5.9905e-02,  3.2008e-02, -4.0905e-02,4.0405e-02,  5.1388e-02, -3.9803e-02,  2.1085e-02,  6.5444e-02,3.9278e-02,  3.9390e-03, -3.2155e-02, -1.8680e-02,  8.2870e-02,3.1471e-02, -3.7028e-02, -5.4587e-02, -7.7640e-02, -6.5252e-02,-5.8961e-02, -1.4701e-02,  5.7851e-02, -3.3551e-02,  2.9227e-02,2.2044e-02, -3.0099e-02, -1.1554e-02,  6.9959e-02, -1.6907e-03,-3.5625e-02, -4.7888e-02, -7.2659e-03, -7.9489e-03, -2.7076e-02,1.8797e-02,  6.6375e-02,  3.0892e-02,  3.8082e-02, -3.8680e-03,-8.6871e-02, -2.4793e-02, -2.0052e-02,  1.1334e-02, -5.2487e-03,-2.0436e-02,  2.8904e-03, -4.8130e-02, -2.1859e-02,  1.7313e-02,-1.8570e-02,  2.9674e-02, -6.1237e-04,  1.3892e-02, -1.1757e-01,5.1298e-02,  1.2071e-03, -2.9477e-02, -4.2624e-02, -1.9138e-03,4.2951e-02,  3.4599e-02, -4.7188e-02, -3.0859e-02, -7.1578e-03,9.4410e-02,  7.0423e-03,  3.9172e-02,  1.8357e-02,  6.2324e-02,1.0528e-02,  3.1407e-03, -5.9503e-02, -9.1024e-02,  2.3525e-02,3.4791e-02,  1.6408e-03,  4.6599e-02, -9.7821e-03, -4.1619e-03,-6.8452e-02, -1.4900e-02,  3.2753e-02,  2.4527e-02,  3.0698e-02,4.4192e-02, -1.6082e-03,  3.2019e-02,  6.6649e-03, -7.6886e-03,-4.9744e-02, -4.4107e-02,  9.3746e-03, -9.1892e-02,  3.5116e-02,1.8788e-02, -2.3901e-02,  2.7037e-02, -6.3355e-03, -8.3084e-02,-2.4544e-02, -5.2577e-02, -4.2704e-02, -6.0901e-02,  1.6533e-02,5.8600e-02, -5.6534e-02, -6.4675e-02, -6.8449e-02, -4.2803e-02,1.7835e-02,  2.7506e-02, -3.0229e-02,  2.9961e-02,  3.7063e-02,1.3282e-02,  1.8195e-02,  2.9121e-02,  8.8965e-02,  4.7957e-04,-4.3933e-02,  2.0706e-02,  3.0304e-02, -2.7217e-02, -8.2037e-02,6.3666e-04,  1.9252e-02,  2.8321e-02,  1.1565e-03,  3.9946e-02,-4.2252e-02,  1.0199e-02,  8.5685e-02, -1.9171e-02, -1.1680e-02,-7.2385e-02,  6.2337e-02, -5.0100e-02, -1.2256e-02,  4.2606e-02,3.7214e-02, -7.6719e-02, -2.9057e-02, -1.4413e-02, -3.5302e-02,-7.0610e-02, -6.0443e-02,  1.6929e-03,  5.7193e-02,  9.1980e-02,1.5234e-03, -9.9855e-02,  1.6826e-02, -6.5924e-02,  6.9662e-02,-1.0828e-01,  4.1302e-02,  1.1223e-02,  2.2327e-03,  1.2579e-02,-1.9904e-02,  8.1419e-02, -8.2096e-02, -8.7374e-03, -6.8623e-03,3.4478e-02, -1.6942e-03,  3.6971e-02,  2.8582e-03, -3.0599e-02,-3.3834e-02, -8.8117e-02,  4.8728e-02,  9.7764e-02, -4.7692e-03,2.3409e-02, -5.6329e-03, -5.3105e-02,  1.1912e-02,  4.9510e-02,-8.7880e-02,  5.7432e-02,  2.7312e-02,  2.1812e-02,  2.5304e-03,-7.2533e-02, -8.9826e-02, -2.5567e-02, -9.3966e-03, -1.5145e-02,-3.9259e-03,  2.6669e-02,  4.9052e-02, -1.6812e-02, -7.1190e-03,6.9071e-03, -2.4360e-02,  3.2412e-02,  1.6394e-02,  1.0379e-02,-7.8892e-03,  1.5057e-02, -2.3972e-02,  5.7964e-03, -3.1339e-02,5.7088e-02,  4.7988e-02,  1.5612e-02,  1.4341e-03,  1.1176e-02,9.8171e-03, -8.7775e-02,  1.5336e-02, -1.2716e-02, -8.2011e-03,-1.1456e-01, -9.1483e-02, -2.2096e-02,  8.5194e-02,  2.7348e-02,1.7912e-02,  6.1081e-02, -2.4157e-02, -2.2360e-02,  7.8401e-02,2.9352e-02, -2.2130e-02,  4.6131e-02,  3.8547e-02, -2.1240e-02,-5.1908e-02, -5.2127e-02, -3.0348e-02, -3.3020e-02,  4.4466e-02,-3.8075e-03,  2.0150e-02,  1.4645e-02, -3.6266e-02, -1.5867e-02,-3.7026e-02,  2.6755e-04,  3.4116e-02, -4.0003e-02, -6.8367e-03,2.8309e-02, -7.0401e-02, -3.5758e-02, -4.5002e-03,  6.7659e-02,2.0750e-02, -2.2504e-02, -1.7390e-02, -3.7482e-02,  7.9375e-02,-2.1870e-02, -3.1453e-02, -5.5684e-02,  5.1964e-02, -7.0544e-02,-5.6539e-02, -3.6298e-02, -1.3538e-03,  1.2654e-02,  5.0039e-02,-2.7865e-02, -2.7823e-02,  4.6853e-03, -4.3723e-02, -4.1178e-03,-3.6927e-03, -1.5218e-02, -5.7671e-02, -9.5580e-02, -2.9939e-03,-3.2172e-03,  2.2057e-02,  2.2572e-02,  1.0971e-01,  1.6636e-02,-6.5337e-02, -9.3285e-02,  5.3380e-02, -2.4826e-03, -3.3368e-02,1.0825e-02,  3.7607e-02,  3.4035e-03,  6.2379e-02,  2.5285e-02,5.5592e-02,  1.9115e-02, -1.6314e-02,  8.6041e-03, -3.8942e-02,1.5487e-02,  3.7246e-04,  4.8784e-02,  9.0470e-02, -6.7619e-02,6.2835e-02, -3.0713e-02, -2.0002e-03, -6.2704e-02,  3.9321e-03,-6.7626e-02, -4.3795e-02,  3.8485e-02, -7.2251e-03,  2.3129e-02,-1.2443e-02,  1.0325e-01,  6.1112e-02, -2.3941e-02,  8.4520e-03,-1.4220e-02, -4.1870e-02, -1.4941e-02, -7.9852e-02,  1.0916e-01,-1.0093e-03,  3.3129e-02,  6.0729e-02,  5.8644e-03, -1.7210e-02,-1.0417e-02,  3.7156e-02, -2.4916e-02, -4.6480e-03,  6.8631e-05,2.2114e-02,  2.8321e-02, -1.0248e-01,  7.7699e-02,  3.1826e-02,4.1777e-02,  5.1011e-04,  5.2819e-02,  2.1694e-02,  2.1760e-02,6.4135e-02,  1.7988e-02,  5.2648e-02,  2.6805e-02, -4.0261e-02,-5.3675e-02, -2.0302e-04,  1.6471e-02,  4.2804e-02, -4.2438e-02,3.6187e-02, -3.2714e-02,  7.3734e-02,  7.7936e-02,  1.6353e-02,3.0186e-02,  7.0639e-02,  3.4325e-02,  3.2198e-02,  7.4942e-02,-4.1167e-02, -7.8726e-02,  2.2518e-02, -3.6159e-02,  5.8681e-02,-1.0600e-02,  2.0683e-02, -4.3811e-03, -1.3279e-03, -4.7762e-02,-2.9550e-02, -7.1941e-02,  2.1938e-02, -1.3467e-02, -2.3221e-02,-2.8922e-02, -8.6233e-02, -4.3769e-02,  5.3068e-02,  3.3916e-04,-7.6389e-03, -3.0481e-02,  1.8538e-02,  4.4916e-02, -4.8099e-02,1.4214e-02, -8.9610e-03,  5.5360e-02, -6.7699e-02, -5.9631e-02,-5.0732e-02,  2.2473e-02, -9.0111e-02, -6.3903e-03, -1.1524e-01,1.5640e-02, -1.0900e-02, -6.2689e-02,  4.0375e-02,  2.9527e-02,-8.1007e-04,  7.4871e-02, -8.3360e-03, -6.5515e-02, -2.1027e-03,2.8308e-02,  1.7294e-02,  5.6298e-03, -2.7107e-02,  6.2226e-03,3.3219e-02,  1.1032e-03, -4.6576e-02, -8.1378e-02, -2.6439e-03,-6.4051e-02, -1.9626e-03, -7.2824e-02,  1.1699e-02, -2.0419e-02,-8.7341e-02, -4.0492e-02,  3.9058e-02,  2.2450e-02,  1.5832e-02,3.1992e-02, -2.6860e-02, -2.4656e-02,  2.6936e-02,  6.1878e-02,1.4913e-02, -6.1894e-02, -9.3952e-03,  3.2871e-02,  3.4400e-02,-6.9497e-03,  7.1030e-02, -7.0824e-03,  6.5021e-02, -4.8494e-03,6.7583e-02,  6.2561e-02, -7.1273e-02,  2.9952e-02,  4.1780e-02,-2.0613e-02,  6.5582e-03, -7.1864e-02,  4.1462e-02, -4.6870e-03,2.9817e-02, -1.8696e-02, -8.9388e-03, -9.8041e-03, -1.8532e-02,8.1891e-02,  2.2917e-03,  2.4863e-02,  7.4622e-02,  4.2977e-02,1.9214e-03,  7.8595e-03,  1.1766e-02, -1.3351e-02, -2.4235e-02,6.2902e-03, -4.1466e-02,  3.7685e-02,  3.4521e-02,  5.9740e-02,-1.5133e-02, -8.7026e-02,  4.3393e-02,  3.2371e-03, -2.0947e-02,3.4414e-02, -6.2728e-02,  3.1944e-02, -2.6442e-02,  5.0758e-02,-4.9869e-02, -3.2714e-02,  4.9559e-02,  2.2911e-02, -8.2884e-02,2.5269e-02,  1.9373e-02]]),grad_fn=<DivBackward0>"
,"tensor([[ 1.7028e-02,  2.8743e-02, -5.2673e-02,  8.7475e-04, -4.0637e-02,4.4340e-03, -1.7424e-02,  1.6272e-02,  5.4692e-03,  1.0264e-01,-5.9619e-02, -4.2378e-02,  1.4742e-02,  6.3759e-03, -1.3732e-02,-7.9997e-03, -1.1766e-02, -5.0428e-02,  9.3316e-03,  6.9795e-02,5.5343e-02,  8.2633e-03, -3.8404e-02,  2.7795e-02,  5.2513e-02,2.7256e-02,  1.7751e-02, -6.5514e-03,  6.4164e-02, -5.1382e-02,-6.8407e-03,  4.0051e-02, -8.0614e-02,  8.7660e-02,  3.3516e-02,-2.8098e-02, -2.7299e-02, -4.2116e-02, -1.9985e-02,  9.8458e-03,-1.6088e-02,  1.7537e-02,  3.0656e-03,  4.1915e-02, -8.6018e-02,7.1207e-03,  1.5470e-02,  9.7284e-03,  3.2433e-03,  4.8762e-02,3.0391e-02, -6.9594e-03,  9.9294e-02,  3.0131e-02,  3.8404e-02,1.1812e-02,  1.9936e-03,  3.6251e-03,  2.1756e-02, -1.3412e-02,9.6829e-02,  1.9686e-02, -1.9085e-02, -3.8048e-02,  1.2607e-02,-2.7200e-02,  3.4096e-03,  3.2165e-02,  2.8821e-02,  2.6829e-02,-8.4985e-02, -5.0380e-03, -9.2885e-02,  6.2166e-02,  5.5968e-02,4.2011e-02, -1.0292e-01, -6.2948e-03, -1.2631e-02, -3.8399e-02,1.7402e-02, -6.2733e-02, -3.4374e-02, -1.2743e-02, -1.0016e-01,3.4783e-03, -1.7073e-02, -3.2691e-02, -3.6643e-02,  4.3565e-02,5.8633e-02,  3.7536e-03, -4.3693e-03,  1.1308e-02,  2.8785e-05,7.5008e-02,  8.6775e-02, -5.5749e-02, -1.5409e-02,  1.9368e-03,2.3251e-02, -4.0109e-02,  5.4247e-02, -8.1386e-02, -7.2609e-02,-1.0253e-02, -9.1261e-02, -5.1757e-02, -9.2094e-02,  3.4619e-02,2.2206e-02, -2.9512e-02,  2.0700e-02, -2.5369e-02, -2.9516e-02,-5.4168e-03, -1.3708e-02,  1.7992e-02, -8.2331e-02,  1.5748e-02,1.6982e-02,  7.2659e-02,  2.0568e-02,  1.0706e-02,  9.6725e-03,3.1925e-03,  2.6863e-02, -2.6478e-02, -2.7285e-02,  2.8160e-02,-5.9460e-02,  4.5673e-02,  3.7656e-03, -6.4790e-02,  9.6275e-03,-5.5592e-02,  3.9698e-02,  6.9362e-03,  8.4144e-06,  6.6708e-02,-3.8467e-02, -5.1250e-02,  7.6776e-02, -5.0533e-02,  2.9605e-02,7.0859e-02,  2.7514e-02,  4.0105e-02, -1.3754e-02, -6.8427e-02,1.4381e-02,  2.8552e-02, -2.6579e-02,  2.7090e-03, -3.1368e-02,-1.1862e-02, -3.7480e-02,  1.1695e-01,  2.0299e-02, -1.9398e-02,5.6658e-02, -4.0506e-03,  1.3974e-02,  1.5791e-02,  2.8772e-02,4.9183e-02, -2.8377e-02, -1.0271e-01,  4.7155e-02,  3.0080e-02,5.9257e-02,  2.9156e-02,  1.0348e-01, -7.5388e-03,  3.0491e-02,-6.6262e-02, -1.7172e-02,  5.8250e-02, -9.7948e-02, -4.7393e-02,-5.6331e-02,  2.7643e-02, -5.2910e-02, -6.0747e-02, -1.7125e-02,8.1409e-02,  6.3295e-02, -4.0690e-02, -5.6505e-02, -5.8331e-02,2.7376e-02,  4.3074e-02,  6.6979e-02, -2.1342e-02, -1.0374e-01,-1.5677e-02, -3.3514e-02, -3.4122e-02, -7.5793e-03, -1.2489e-02,-1.4796e-02,  6.4782e-02, -2.4151e-02, -2.7789e-02,  2.3368e-02,-4.5707e-02,  4.8243e-04, -5.5452e-02, -2.7253e-02,  4.1888e-02,-3.8164e-02,  1.0311e-02, -9.6417e-03,  2.4107e-02,  5.8386e-02,8.3855e-02,  4.3602e-02, -3.2272e-02, -3.1858e-02, -7.1654e-03,2.9877e-02, -3.4846e-02, -1.8982e-02,  1.7308e-02,  2.6971e-02,1.3814e-02,  1.1953e-02, -5.1170e-02,  6.0408e-02,  2.9813e-02,4.2208e-02, -8.9102e-03,  2.4876e-02, -6.1429e-02,  1.0422e-02,6.7333e-02, -8.4615e-03, -1.6636e-02,  7.5337e-03,  2.7857e-03,-5.3364e-03,  2.8295e-02, -1.1033e-01, -3.5230e-04, -2.7351e-02,4.6249e-02,  5.0373e-02,  1.7762e-03,  3.8550e-02, -2.0545e-03,-6.4472e-02,  4.2926e-04,  2.1769e-02,  3.2832e-03,  4.1409e-02,-3.4228e-03, -1.0643e-02,  8.6319e-04,  1.1757e-02,  3.4638e-02,1.8308e-02, -3.9766e-02,  1.0697e-02, -4.8530e-02, -1.3396e-02,-8.9160e-02, -6.6787e-02,  1.7695e-02, -2.8687e-02, -6.5076e-03,9.3315e-02,  3.9623e-02, -6.6593e-02,  8.9979e-02,  1.9820e-02,6.7755e-02, -2.5457e-02,  2.2802e-02, -3.0027e-02,  3.9219e-02,5.7544e-04, -6.6571e-02, -5.8453e-03,  3.6520e-02, -6.0227e-02,-1.9224e-02, -4.0870e-02, -3.7597e-02, -8.8091e-02,  6.9092e-02,-4.9026e-03,  7.8946e-02,  9.1438e-04,  4.8117e-02, -5.4034e-02,-2.8811e-02, -4.9392e-02, -1.8469e-02, -5.0549e-02,  2.5390e-02,2.0869e-02,  3.0213e-05,  3.6606e-02,  4.0611e-02,  8.4189e-02,-5.9500e-02,  7.4214e-02,  3.7816e-02, -1.2534e-02, -3.9972e-02,-5.7898e-02, -3.3245e-02, -6.1818e-02,  1.5272e-02,  2.7681e-02,-5.2985e-02, -3.2741e-02, -4.5252e-02,  2.1983e-02, -5.7826e-03,-2.8478e-02, -1.8704e-02, -3.4359e-02, -7.2313e-03, -6.8824e-02,4.0202e-02, -2.4094e-02, -7.1511e-02, -1.1013e-01,  6.7137e-02,-2.1893e-02, -3.1988e-02, -8.1002e-02, -4.8906e-02, -3.4495e-02,1.7096e-02, -4.1865e-03, -3.3367e-02,  4.0753e-02,  2.1736e-02,2.2922e-02, -3.7192e-03,  6.8893e-02, -4.0471e-02,  3.4685e-02,-6.9714e-02, -3.4511e-02,  3.5080e-02, -2.2139e-02,  9.0323e-02,-8.0040e-02,  9.1728e-03, -9.8261e-03,  1.3515e-02, -2.8802e-02,-2.9439e-02,  7.7316e-02, -1.2157e-03, -4.1900e-02, -2.1021e-03,4.6953e-02, -4.3084e-02, -5.2806e-02, -2.3254e-02, -1.1070e-02,5.2988e-02, -4.0601e-03,  6.4833e-02,  5.1899e-03, -2.5080e-02,3.2377e-02,  9.1309e-02,  6.6343e-03,  2.4266e-02, -5.7616e-02,-5.8841e-02, -9.0695e-02, -5.3693e-02, -2.7281e-03, -2.9261e-02,3.2505e-02,  3.8348e-02,  9.4637e-02, -5.6836e-02,  7.6154e-04,-2.8580e-02, -5.5787e-03,  2.8074e-02, -3.6306e-02,  3.3355e-02,4.6047e-02,  2.6274e-02, -1.9387e-02,  6.6607e-02, -6.7652e-02,-6.5395e-02, -3.8871e-02,  6.1856e-02,  5.3026e-02, -3.4647e-02,1.3474e-02,  5.0247e-02,  5.6568e-02,  2.4035e-04, -9.2403e-02,-2.5863e-02,  4.2975e-02,  7.8592e-02, -9.2537e-03,  6.2344e-03,-3.1898e-02,  2.0104e-02, -3.3787e-02,  2.5991e-02, -6.3139e-02,-7.7635e-02, -2.4000e-02, -8.7147e-02,  3.3373e-02, -5.9926e-02,-1.1276e-02,  7.2743e-02,  5.0587e-03,  6.7538e-02,  9.5568e-02,1.6090e-02,  6.8305e-02, -3.3959e-02,  1.4991e-02, -2.8380e-02,3.6782e-02, -6.1649e-02,  4.4932e-02, -6.9946e-02,  8.0575e-02,1.4718e-02,  6.0472e-02, -1.4889e-02,  7.7039e-03, -4.5878e-02,-3.6680e-02, -2.2732e-02, -3.2811e-02,  2.6212e-02, -1.8427e-02,5.6269e-02, -1.4991e-03,  2.0543e-02,  1.0063e-02, -6.4706e-02,3.9269e-02,  1.3864e-02,  1.8325e-02, -2.0827e-02,  1.4048e-02,-3.3900e-02,  3.3690e-02,  3.3282e-02,  7.2087e-02, -2.8795e-02,3.2104e-02,  9.3562e-02,  3.2588e-02,  6.5729e-02, -2.3065e-02,2.4923e-02,  1.0334e-02, -2.7584e-02, -3.3522e-03, -4.6523e-02,2.1949e-02, -4.1826e-03,  1.0993e-03,  4.8589e-02,  4.7726e-02,6.5637e-02, -4.6914e-03, -1.4695e-02,  1.9122e-02, -2.7371e-02,2.2683e-02,  4.1639e-02,  4.5280e-02,  2.1495e-02,  3.1824e-02,-7.8081e-02, -3.5543e-02,  1.7466e-02, -2.4539e-02, -2.9320e-02,-1.0371e-02, -6.5409e-02,  7.8884e-02,  4.8748e-02,  2.6180e-02,3.6611e-02,  3.0339e-02, -4.2095e-02, -1.9021e-03, -5.3551e-05,3.0922e-02, -2.4899e-02,  6.7824e-02, -2.2162e-03, -3.2270e-02,-1.2017e-02, -3.6741e-02,  6.2180e-03,  2.5321e-02,  8.8412e-03,-1.5260e-02,  1.9977e-02]]),grad_fn=<DivBackward0>"
,"tensor([[-8.9479e-03,  3.7037e-02, -1.4483e-02,  5.7643e-02, -3.0326e-02,1.9130e-02,  7.8988e-02,  7.2174e-02,  1.5503e-02, -8.8049e-02,3.3458e-02, -3.2065e-03, -1.8264e-02,  5.0408e-02,  1.7249e-02,-3.4692e-02, -3.3930e-02,  6.0462e-02, -2.2629e-02, -2.3043e-02,-2.7084e-02, -6.5588e-02,  3.2263e-02, -2.2199e-02,  2.5782e-02,-2.7107e-02, -2.7414e-02,  1.6013e-02,  2.9788e-02, -3.9361e-03,3.0901e-02, -5.6492e-03, -4.6223e-02, -2.6562e-02, -8.8315e-03,6.7543e-02,  1.6845e-03,  5.0875e-02, -1.3909e-03, -2.6698e-02,2.3336e-02, -2.7950e-02, -4.8308e-02, -3.5055e-02,  5.4838e-02,-8.7941e-02, -4.4966e-02,  4.4927e-02,  3.5508e-02, -4.8905e-02,-6.6271e-02, -5.5592e-02,  4.5129e-02,  7.2165e-02,  1.2101e-03,3.4741e-02, -5.6514e-02,  5.3293e-02,  1.8935e-02, -3.4848e-03,-2.5865e-02, -4.4735e-02,  3.9997e-02,  9.7153e-02,  2.1983e-02,-3.3239e-02, -1.7282e-02, -2.0405e-02,  1.3430e-02, -4.8291e-02,-1.1550e-01, -3.2137e-03,  1.8174e-02, -6.9265e-02,  3.5125e-02,-8.3318e-02,  9.5732e-03, -4.4163e-02,  2.2748e-02, -7.4006e-03,-3.4760e-03,  2.4425e-02, -4.4177e-03,  2.9132e-03,  1.8489e-02,8.7173e-02, -9.8124e-03, -4.3035e-02,  4.7649e-02, -1.5349e-02,2.5110e-02,  7.5281e-02, -4.1302e-02, -4.7173e-02,  2.8297e-02,4.2445e-02, -8.2394e-03, -2.4360e-02, -2.4586e-02,  2.2548e-03,-1.9458e-02, -3.8637e-02, -2.2771e-02,  1.3637e-02,  1.6994e-02,3.9211e-03,  6.8995e-03,  4.5247e-02,  2.6424e-03,  8.7010e-05,2.1064e-02,  1.0038e-01,  5.2595e-02, -2.4120e-02,  1.9931e-03,-4.6497e-02, -3.9782e-02, -2.3523e-02, -1.3875e-01, -4.9360e-02,-5.9159e-02,  3.0232e-02,  6.8432e-02,  9.8148e-03, -6.3518e-02,-5.2766e-02, -8.9627e-03, -5.1956e-02, -3.2357e-02, -1.4926e-03,-9.7672e-03,  1.4040e-03,  5.3997e-02,  1.1908e-02,  6.9084e-02,6.9284e-02,  7.2421e-02,  1.6354e-02, -4.6614e-03,  4.0085e-03,2.2649e-02,  2.4527e-03,  2.7164e-03,  6.5227e-02, -4.5804e-02,4.6528e-02, -1.2448e-02,  7.5987e-02, -4.4347e-02,  8.6749e-03,2.5967e-02,  8.8006e-03, -4.3912e-02, -8.1537e-02,  1.9345e-02,5.5413e-02, -4.8924e-02,  5.0362e-03, -4.1635e-02,  3.4440e-02,1.3808e-02,  5.2031e-02,  8.7608e-02, -1.2875e-02, -8.9108e-02,6.4561e-03, -9.9788e-02,  2.4737e-02, -1.8368e-02,  5.2432e-02,-2.4726e-02, -5.2874e-02,  4.1809e-02,  2.2734e-02,  1.5452e-02,3.2804e-02, -6.6633e-02, -2.4091e-02, -2.1989e-02,  2.9654e-02,-2.8263e-02,  2.9416e-02,  2.5570e-02, -3.3447e-02, -1.5987e-02,-8.8376e-02,  5.9030e-02, -2.8327e-02,  5.9165e-02, -2.2583e-02,-1.4223e-02,  5.7472e-03, -2.1086e-02, -4.1792e-02, -2.8331e-02,3.8309e-02, -5.9138e-02, -3.8702e-02,  1.8415e-02, -7.1338e-02,3.0032e-02,  2.1143e-02,  4.4935e-02,  5.6527e-03,  8.1962e-02,-2.6898e-02,  1.3601e-03,  2.5903e-03,  3.2452e-02, -1.8398e-02,-1.7906e-02, -1.4869e-02,  2.6931e-02, -4.4074e-02, -5.3049e-02,4.6750e-03,  1.5923e-02,  2.9161e-02, -1.9254e-02, -2.2266e-02,-1.8067e-02,  3.0452e-02, -4.8360e-03,  1.3964e-02,  4.1719e-03,5.4135e-02,  8.1043e-02,  6.9726e-02, -1.0746e-01, -8.4018e-02,-3.4513e-02,  3.0634e-02, -4.2061e-02, -6.9527e-03, -3.8317e-02,4.1076e-02, -2.9454e-03,  7.6508e-02, -2.1612e-02, -1.2773e-02,-1.3687e-01, -2.5149e-02,  2.8059e-03,  2.1001e-02,  3.6902e-02,-5.2654e-03,  2.7077e-02, -9.7954e-02, -3.4209e-02,  4.7702e-02,-9.9940e-03, -3.1615e-03, -3.7694e-03,  8.8806e-02, -5.8378e-03,-7.8007e-04, -7.2900e-02,  2.7630e-02,  6.9729e-03,  2.1302e-02,8.3165e-02,  1.8281e-02,  5.1892e-02, -6.6886e-03,  7.4940e-03,-2.3292e-02, -1.6545e-02,  2.3509e-02, -3.5220e-02, -4.1903e-02,-4.5869e-02, -6.5280e-02, -7.6744e-03,  6.0459e-02,  4.9932e-02,-2.8710e-02, -2.0538e-02, -4.8643e-02,  3.8509e-02,  5.3748e-02,-9.3793e-02,  3.4055e-02, -8.3735e-02, -1.6449e-02, -4.1771e-02,4.6963e-02,  2.0933e-02,  1.0993e-01,  2.0898e-02,  1.8484e-02,4.7472e-02, -3.8172e-02,  3.2562e-02,  4.3500e-02, -1.7620e-03,3.4622e-02,  6.0281e-03, -4.3006e-02, -5.7042e-02, -4.1017e-02,-6.5073e-02,  4.4640e-02,  2.9552e-02,  1.5396e-02,  3.8741e-02,2.8296e-02, -3.3711e-02,  8.4296e-03,  4.4459e-02,  2.8127e-03,-2.1240e-02,  4.1706e-02,  8.0147e-02,  6.9407e-02,  4.9029e-02,8.1991e-02,  5.5419e-02, -9.7250e-03, -5.1693e-02, -1.9728e-02,-5.5136e-02, -3.0580e-02,  1.6267e-02,  6.7679e-02,  7.2974e-02,-1.7425e-02, -1.1667e-02,  2.4424e-02, -3.9345e-02, -6.9791e-03,3.9987e-02,  2.1100e-02, -3.0999e-02, -1.0370e-02, -5.1416e-03,-3.2939e-03,  6.8483e-02,  1.0492e-01,  1.4657e-02, -7.0697e-02,4.1781e-02, -7.2448e-02,  4.2482e-03, -6.2054e-03,  1.1114e-02,-5.1867e-02,  4.7709e-02,  6.6643e-02, -5.0961e-02, -3.1496e-02,1.1452e-02,  2.2709e-02,  4.4630e-02, -5.5248e-02,  2.7947e-02,9.2621e-02, -2.1107e-03,  7.8119e-03,  7.2589e-02, -2.0916e-02,-3.6226e-02,  2.6558e-02,  5.5503e-02,  1.8722e-02,  5.0996e-03,3.0589e-02, -2.7045e-02, -1.1314e-02,  4.5867e-02, -9.0972e-03,2.9969e-02, -4.0955e-02,  8.5841e-02,  2.7004e-02, -4.5045e-02,8.1530e-02,  8.4759e-02,  4.6365e-02,  1.2094e-02, -1.8885e-02,-1.3672e-02,  5.1875e-02,  6.2828e-02,  2.6493e-02,  6.7670e-02,-6.4899e-02, -4.0489e-03,  3.4186e-02, -3.9219e-02, -9.1781e-05,4.9897e-02, -5.3374e-02,  1.1905e-02, -1.2566e-03, -4.6192e-02,-2.5558e-02, -3.3146e-02,  1.4412e-02, -4.2243e-02,  2.2346e-02,-3.6361e-02, -5.0815e-02, -2.9618e-02, -2.8418e-03, -4.0254e-04,8.3652e-02, -1.4394e-02, -4.8638e-02,  6.4667e-02,  8.0101e-02,1.7885e-02,  8.1511e-02, -8.2608e-02, -8.7033e-02,  1.8225e-02,-1.9591e-02, -1.1758e-02, -2.4077e-02, -9.7039e-03, -6.3618e-02,5.8763e-02, -1.4679e-02,  1.7507e-03, -2.5224e-02, -9.6017e-03,2.8969e-02,  1.5841e-02,  2.6167e-02,  2.5700e-02, -5.0879e-02,-2.6260e-02,  2.7344e-02,  4.7034e-02, -5.7136e-02, -1.5606e-02,9.9661e-04, -8.5767e-02, -7.2911e-02, -1.8096e-02, -2.7755e-02,-2.9263e-03,  3.7750e-02, -1.7198e-02,  1.5482e-02, -2.5620e-02,1.6777e-02, -2.9006e-02,  4.4788e-02,  1.1450e-03,  5.2737e-02,3.7259e-02, -1.1697e-01, -5.0160e-02, -6.0687e-03,  4.8526e-03,-1.0886e-02,  9.6185e-03, -2.9802e-03,  9.0380e-02, -4.7346e-02,-2.0337e-02,  9.6697e-02, -1.3365e-02,  2.6176e-02, -5.2147e-02,3.8713e-02,  6.3529e-02, -2.0302e-02,  7.2488e-03,  5.7456e-02,-8.6628e-02, -8.0536e-02, -2.5431e-03, -6.0627e-02,  5.8410e-02,5.8471e-03, -8.1819e-02,  1.1462e-01,  1.8494e-02, -5.5564e-02,1.7861e-02, -2.7644e-02, -3.3733e-02,  2.9967e-02, -7.5663e-02,7.0639e-05,  1.7914e-02,  1.1367e-02, -7.4282e-03, -7.3629e-03,-5.3806e-02,  4.6731e-03, -8.2470e-02, -2.6191e-02,  9.0140e-03,-1.5978e-03, -6.3341e-02,  4.1601e-02,  1.6274e-02, -5.4137e-03,5.2810e-03, -4.5281e-02, -1.6667e-02, -3.3652e-02, -2.0137e-02,-3.5864e-02,  3.1174e-02,  2.8291e-02,  6.7643e-02, -5.0779e-02,-2.7382e-02, -4.0387e-03]]),grad_fn=<DivBackward0>"
,"tensor([[-2.9233e-03,  4.4371e-02,  8.3776e-03,  1.2016e-02,  1.5687e-02,-8.3966e-03,  3.7652e-02,  2.3690e-02,  6.4855e-02, -6.1477e-02,-6.1803e-02, -9.7841e-04,  4.8948e-03,  5.1584e-02, -4.8875e-02,-1.0276e-01, -6.1756e-02,  1.0071e-01, -3.4165e-02,  2.3364e-02,7.6341e-03, -1.2220e-02,  3.2128e-02, -7.8454e-03,  2.1586e-02,1.0613e-02,  4.4311e-02,  1.8505e-02,  7.0322e-03, -7.6283e-02,7.1215e-02,  1.4480e-02, -3.9264e-03, -2.5753e-02,  4.9910e-02,3.9193e-02, -4.0742e-02,  5.1896e-02, -5.8905e-02,  4.8310e-05,-1.6396e-03, -1.5585e-02, -3.8408e-02, -4.4082e-02, -1.7943e-02,-6.0251e-02, -8.1364e-02,  8.8710e-02, -5.9392e-02, -6.2920e-02,-2.3274e-02, -2.0111e-02,  5.1025e-03,  6.9908e-02,  2.9879e-02,4.7468e-02, -8.1551e-03,  2.1386e-02,  4.0065e-02, -4.4390e-02,2.4414e-03, -2.2059e-03,  6.8588e-02,  2.2558e-02,  1.6537e-02,-4.9961e-02, -1.0513e-02, -1.9611e-02,  2.4403e-02,  2.6018e-04,-6.0688e-02, -4.3164e-02, -2.6549e-02, -5.1810e-02,  9.3740e-02,-7.2371e-02,  9.7326e-03, -8.9494e-03, -1.0542e-02, -2.8682e-02,-7.2431e-03,  4.2693e-02,  7.3600e-02, -3.6798e-02, -6.5198e-02,6.7116e-02,  4.8909e-02, -8.3148e-02, -2.6289e-02,  2.3004e-03,-1.4640e-02,  4.6775e-02,  4.5282e-02, -2.2525e-02, -1.1995e-02,3.7325e-02, -1.9756e-02, -5.5542e-02, -2.3973e-02,  1.0568e-02,2.1266e-02, -1.8476e-02, -2.0226e-02,  5.4822e-03, -3.7176e-02,4.4563e-02,  1.9044e-03,  5.4226e-02, -1.7075e-02,  3.2107e-02,1.5248e-02,  5.7269e-02,  7.7437e-03,  2.2606e-02,  3.5073e-02,-1.6533e-02, -8.2444e-03,  2.6161e-02, -1.0996e-01, -4.6588e-02,-4.2959e-02,  1.4369e-02,  9.0293e-03,  3.7387e-02, -8.6233e-02,-4.5771e-02, -2.8625e-02, -5.5654e-02, -8.5376e-02,  1.8709e-02,-9.8432e-03, -7.5650e-04, -3.7039e-03, -5.6867e-02,  3.0023e-02,4.9274e-02,  7.1340e-02, -3.6748e-02, -4.8436e-02, -5.0535e-02,3.2756e-02, -2.4605e-03, -4.1099e-04,  6.3724e-02,  1.7967e-02,2.7276e-02,  2.5129e-02,  3.2830e-02, -7.3320e-02, -4.5941e-02,-4.4078e-02, -1.6273e-02, -5.8171e-02, -7.5685e-03,  1.3552e-02,-3.9057e-02, -1.7341e-02,  1.8942e-02, -5.8836e-02,  1.1377e-03,1.3857e-02,  1.1334e-01,  3.9377e-02, -1.9668e-02, -2.3183e-02,4.0789e-02, -7.6545e-02, -8.5539e-03, -7.1274e-02,  3.0882e-02,-1.9081e-02, -2.7798e-02,  2.9394e-02,  7.2292e-03,  2.2422e-02,-3.1373e-02, -5.0649e-02, -8.7030e-03, -1.3176e-01,  5.5351e-02,3.6375e-02,  5.7322e-02,  8.5593e-03, -3.4325e-02,  8.6936e-02,-1.0448e-02, -1.2615e-02, -8.1346e-02,  8.8869e-02, -1.4288e-02,-2.7006e-02,  4.6572e-02, -1.9252e-02, -4.2654e-02, -3.7278e-02,2.0835e-02, -4.7308e-02, -1.6471e-02,  5.4366e-02, -6.2305e-02,1.0180e-02,  1.2656e-02, -3.6090e-02,  2.3651e-02,  5.3370e-02,-9.0626e-02, -3.1026e-02,  1.9931e-04,  4.6277e-02,  4.6748e-02,5.8072e-02, -2.6145e-02, -2.5741e-02, -6.6789e-03, -3.5806e-02,2.9863e-02, -2.8568e-03,  3.5600e-02, -4.5178e-02, -2.7321e-02,1.3737e-02,  1.6570e-02, -1.2070e-02,  4.4815e-02, -4.9900e-02,4.8870e-02,  2.7948e-02,  1.8906e-02, -4.6252e-02, -1.1439e-01,-2.1288e-02,  2.2778e-02,  1.0017e-02, -4.3704e-02, -4.7870e-03,7.4056e-02, -8.9317e-02,  4.4314e-02,  1.7359e-02, -8.9406e-03,-7.5723e-02, -4.4771e-02, -4.1486e-02,  5.6400e-03, -8.5509e-03,2.4979e-02,  7.1174e-02, -6.8580e-02, -3.3962e-02,  5.0719e-02,-1.2042e-02, -2.9436e-02,  3.2547e-02,  6.6978e-02,  6.9572e-02,-4.7722e-04, -4.0167e-02,  4.7133e-02, -4.6790e-02,  6.4415e-02,7.4791e-02,  5.7226e-02,  1.2143e-02, -2.4450e-02, -4.0791e-02,-5.7656e-02,  1.8447e-03,  4.7689e-02, -6.3519e-03,  2.4677e-02,1.7229e-02, -5.4327e-02, -3.5811e-02, -4.8896e-02,  1.3600e-01,2.8411e-02,  5.7908e-02, -3.6512e-02,  6.6290e-02,  7.1252e-02,-1.6388e-02, -5.3995e-02, -1.2757e-01, -2.5029e-02, -4.4401e-02,2.4911e-02,  1.1609e-02,  5.4765e-02, -2.4143e-02,  1.8980e-02,2.4933e-02, -4.7183e-02,  2.1977e-02, -4.3980e-02,  4.4476e-03,1.9451e-02,  4.8715e-03, -1.1229e-02, -1.4863e-02, -2.8129e-02,-2.6805e-02,  2.1807e-02,  3.4806e-02,  1.2709e-02,  1.5312e-02,-3.1171e-02,  8.6557e-03, -1.1151e-02,  1.1769e-03, -2.7012e-02,-4.4338e-02,  2.2414e-02,  4.4743e-02,  8.3345e-02,  2.6315e-03,8.3919e-02,  2.0023e-02, -4.2194e-02, -2.4299e-02,  3.0634e-02,-9.5579e-03, -5.2136e-02,  6.1603e-02,  6.2802e-02, -1.2019e-02,-3.9991e-02, -9.5470e-03, -4.2209e-02, -2.3810e-02, -4.2253e-02,-2.1192e-02, -2.5484e-02,  5.6119e-02, -3.9669e-03, -3.9267e-03,8.7790e-03,  7.7466e-02,  4.5086e-02, -1.1750e-02, -5.3164e-02,-4.6882e-02, -4.5118e-02, -2.4952e-02, -4.3564e-02,  4.9658e-02,-1.3856e-02, -1.3992e-02,  1.6490e-01, -1.3578e-03,  8.4058e-03,-1.3418e-02,  2.6966e-02,  4.8094e-02, -8.9913e-03, -4.4186e-02,4.2985e-02, -2.0915e-02, -1.6989e-02,  4.5659e-02,  9.1472e-02,2.8359e-02,  6.3831e-02,  4.2330e-02,  1.4111e-02, -2.3372e-02,4.4994e-02, -7.8471e-04,  5.6514e-02,  8.9353e-02, -6.1491e-02,2.7696e-02, -2.3309e-02,  6.6743e-02,  6.5040e-02, -7.7266e-02,3.4731e-02, -6.7240e-03,  3.4008e-02, -2.1257e-02,  2.7951e-03,2.4757e-02,  9.3322e-02,  5.1558e-02, -1.0370e-02, -5.9499e-03,-7.5265e-02, -1.8704e-02, -3.9405e-02, -1.0795e-02,  2.4449e-02,-2.9133e-02, -3.5952e-02, -1.4237e-02,  2.8580e-02, -6.2221e-02,7.2794e-04,  2.0768e-03,  6.1376e-02,  3.2214e-02, -2.7458e-02,-2.5150e-02, -8.3859e-03, -6.6267e-02, -1.1365e-02,  3.6164e-02,6.3542e-02, -7.5862e-02, -2.8941e-02,  6.3192e-02,  9.0852e-02,-5.9377e-02,  8.4868e-02,  1.9547e-02, -7.8616e-03, -1.6691e-02,-4.6057e-02,  1.6493e-02, -3.7730e-02, -4.3231e-02, -5.4784e-02,1.9978e-02,  3.3474e-02, -5.1736e-02, -1.0475e-03,  3.2177e-02,-1.9017e-02, -1.8633e-02, -5.6426e-02,  8.6135e-03, -3.6762e-02,-8.1156e-02, -3.8652e-02,  2.5626e-03, -8.1783e-02, -5.7769e-02,1.1303e-02, -7.7126e-02, -2.5012e-02,  3.3498e-02, -2.8539e-02,4.7238e-03,  3.1364e-02, -6.1529e-02, -6.0840e-03, -5.9965e-03,-7.6825e-03, -6.4708e-02,  4.5031e-03, -5.5620e-02,  5.0747e-02,3.0748e-02, -2.3488e-02, -6.1592e-02, -1.8914e-02, -3.6622e-02,-7.7431e-03, -1.9590e-02, -1.1541e-02,  1.2361e-01, -2.9636e-03,-1.2030e-02,  1.1645e-01,  4.0382e-03,  1.2930e-02,  2.0997e-02,1.0975e-01, -5.1659e-03, -3.4566e-02,  2.1075e-02,  4.8260e-02,-4.0417e-02, -1.9000e-02, -3.0473e-02, -1.2685e-02,  1.4870e-02,1.6914e-02,  1.0063e-02,  6.2559e-02,  2.0797e-02, -5.0714e-02,6.8493e-02, -2.7446e-02, -4.2269e-02,  4.6754e-02,  5.0841e-03,7.0943e-03,  3.6760e-02, -7.4756e-04, -3.0874e-04,  8.1884e-03,-3.7441e-02, -3.0713e-02,  3.5366e-02,  1.4154e-02,  3.1865e-02,-1.6869e-02, -9.3658e-02,  4.2697e-03, -5.1100e-02, -2.6442e-02,-6.2965e-03, -7.5814e-02,  9.3196e-03, -6.0857e-02,  2.4198e-02,-1.5892e-02,  3.3740e-02,  3.1391e-02,  3.8971e-02, -6.3301e-02,1.3405e-02, -1.9105e-02]]),grad_fn=<DivBackward0>"
,"tensor([[ 7.1697e-02, -2.8683e-02, -3.6210e-02,  2.1911e-02, -5.7598e-02,2.6521e-02,  3.8647e-02,  7.8037e-02, -1.5708e-01,  2.7393e-02,-5.5143e-02, -1.2554e-03, -3.9393e-02, -6.1461e-03, -3.5951e-02,-2.4056e-02,  1.5278e-03,  1.3013e-02, -1.0975e-02, -7.3271e-02,-4.7854e-02,  1.9350e-02, -4.7147e-02, -4.9899e-03,  2.3131e-02,-9.2455e-02, -1.2900e-06,  2.3820e-02,  4.1667e-02,  5.2115e-03,1.1870e-02, -7.0610e-02,  6.7202e-03, -1.6267e-02, -2.8549e-02,-1.1337e-02, -3.1486e-02,  6.3529e-02,  4.6502e-03, -6.6293e-02,-3.4322e-02,  4.0164e-02,  5.3965e-02, -2.4562e-02,  6.7492e-02,2.3775e-02, -4.1418e-02, -1.1093e-01,  6.9857e-02,  2.6839e-02,4.0794e-03, -3.8106e-02,  5.5398e-02,  1.2558e-02, -1.9080e-02,8.5945e-03, -2.5593e-03,  2.3834e-02,  3.3320e-02,  6.3318e-03,-6.7813e-03, -6.1785e-02,  7.6637e-02,  4.0232e-02,  1.5532e-03,8.2659e-03,  7.9172e-02,  3.0135e-02,  4.8134e-02,  1.4366e-02,-8.1476e-02, -8.8970e-03,  4.4606e-02,  2.4464e-02, -2.5861e-02,-1.1373e-02, -1.4760e-04, -2.3706e-02,  9.1153e-02,  9.0128e-03,9.7070e-03,  2.9882e-02,  3.7087e-02,  2.3182e-02, -2.4904e-02,6.6626e-02, -4.2619e-02, -6.1886e-02,  5.2664e-02, -4.7202e-02,-1.6246e-02, -9.2088e-04, -5.0305e-02, -3.0502e-02, -6.4089e-02,-1.1652e-02, -4.9316e-05, -4.2656e-02,  1.1094e-02,  2.8855e-03,7.1454e-03, -2.0741e-02,  2.9566e-02, -3.0268e-02, -1.3333e-02,1.9388e-03, -3.8543e-02, -8.5022e-02, -2.2166e-02, -6.3050e-02,-7.3241e-02,  6.6212e-02,  4.7826e-02, -2.8638e-02,  4.0237e-02,-2.0297e-02,  3.1119e-03, -4.0826e-02, -6.0171e-03, -3.4372e-02,-5.9318e-02,  3.2514e-02, -1.0304e-02, -4.3477e-02, -8.3860e-03,3.7051e-02,  1.4314e-02,  3.7284e-03,  7.0785e-02,  7.7396e-02,-9.2950e-03, -2.6234e-02, -7.8840e-03,  7.7053e-02,  3.5185e-02,-6.4931e-02, -1.0356e-02,  5.6132e-02,  6.1505e-02,  7.2961e-03,1.3597e-03,  6.2191e-02,  8.0365e-02, -2.9209e-02, -8.1412e-02,7.0088e-02, -9.2728e-03, -3.3410e-02,  1.6996e-02,  1.0385e-01,8.2721e-03, -4.6780e-02, -4.5227e-02, -2.8053e-02, -3.4373e-04,1.4636e-02, -6.2592e-02, -5.9974e-02, -5.3231e-02,  9.3990e-03,-4.2368e-02, -4.3530e-02,  5.5002e-02, -2.8760e-02, -7.1724e-02,3.8024e-02, -4.0214e-02,  1.8333e-03,  2.1791e-02,  2.9908e-02,-2.4421e-02, -2.5069e-02,  2.0814e-02,  8.3625e-02, -2.9519e-02,6.0302e-02,  6.6871e-02,  7.0233e-02,  5.1876e-02, -5.7726e-02,-4.3298e-03, -6.7102e-02,  9.6962e-02, -4.2054e-02,  1.9020e-04,-5.8621e-02,  6.0194e-02, -5.2147e-02,  6.2159e-02, -1.9092e-02,1.7486e-02,  5.6618e-02, -2.0553e-02,  4.0630e-02,  6.1639e-03,7.8599e-02, -2.2376e-02, -1.4259e-03,  6.2450e-03, -3.2046e-02,-7.4247e-02,  8.8320e-02,  3.6483e-02, -3.2546e-02,  3.9878e-02,-1.3451e-02,  1.4119e-02,  8.5258e-02,  1.6548e-02, -5.9210e-02,-1.5547e-02,  4.5521e-02,  7.6128e-03,  6.5046e-02, -1.7772e-02,3.5866e-02, -2.0820e-02, -3.6712e-02, -8.7581e-02,  9.9428e-02,-3.4560e-04,  8.6054e-02, -8.7516e-03,  9.2648e-02, -9.5560e-03,-4.4159e-02,  2.5639e-04, -2.3867e-02,  1.6136e-02, -1.8270e-02,2.9029e-02,  4.2107e-02,  7.7673e-03, -6.4820e-02, -6.7326e-02,-7.3466e-02,  5.8045e-02,  3.7551e-02,  2.4552e-02, -4.8277e-02,2.1207e-02, -2.3014e-02, -5.8508e-02,  7.4545e-03, -4.0418e-02,-7.0750e-02,  1.9322e-02, -6.6053e-02, -2.7720e-02, -2.2444e-03,-1.5236e-02,  3.1355e-02, -4.6670e-02,  5.2228e-02, -6.8088e-02,-5.3020e-02, -2.3623e-02,  1.5375e-02, -3.5558e-02, -2.6266e-02,8.1140e-02,  3.7872e-02, -1.8785e-02, -1.3673e-02,  6.7165e-03,-1.9483e-03, -1.0873e-02, -7.9071e-03,  2.4417e-02, -3.9887e-02,1.8165e-02,  5.2467e-03,  3.3545e-02, -2.8558e-03, -7.0429e-02,-1.4553e-02,  1.8112e-02, -5.0665e-02,  5.6074e-02,  3.1472e-02,1.1929e-02,  2.0095e-02, -8.5767e-02, -4.3639e-02,  2.1689e-02,6.9528e-02,  2.1661e-03,  4.1336e-02,  3.0457e-02,  1.2864e-02,-6.1650e-02,  1.5845e-03,  7.7501e-04,  5.8803e-02,  6.6777e-02,1.6814e-02, -4.5421e-02,  5.3212e-02, -1.3014e-03, -2.7693e-02,6.8313e-02,  1.1559e-03,  7.2210e-02, -4.0190e-02,  9.4462e-04,2.7693e-02,  4.3379e-02, -3.8939e-02,  1.9611e-03,  8.3716e-02,2.1938e-02,  1.4870e-02, -7.1583e-03,  5.3486e-02,  4.8526e-02,-4.1892e-02, -2.7839e-02, -9.2360e-03, -3.9887e-02,  1.7685e-02,4.9409e-02, -4.2404e-02,  5.1235e-02, -2.9906e-02,  6.9078e-02,-2.8201e-02, -6.4008e-02, -1.1996e-01, -4.5528e-02, -5.8664e-02,2.1928e-02,  1.3748e-02, -5.4093e-02, -4.9697e-02, -8.1306e-03,2.9662e-02, -3.1619e-02,  2.1331e-02, -3.8991e-02,  2.9468e-02,7.4517e-03,  4.7505e-02,  3.3275e-02, -2.1494e-02, -7.1888e-02,-6.5220e-03, -5.6821e-02, -5.4199e-02,  6.4456e-02,  2.2399e-02,4.5859e-03, -1.8366e-02,  1.5890e-02, -3.5602e-02, -5.8480e-02,-3.6295e-03, -1.0526e-02,  6.7592e-02, -5.6216e-02, -6.2747e-02,-5.1464e-02, -3.6438e-02,  2.3680e-02,  9.9277e-02,  5.2020e-02,-4.5181e-03,  5.7477e-02,  3.6805e-02, -2.0525e-02,  4.5505e-02,2.5834e-02,  1.9854e-02,  1.1457e-02,  4.0573e-04, -6.9981e-02,-4.8563e-03, -2.9347e-02, -2.9756e-02, -6.2787e-03, -4.6633e-02,1.3289e-02,  4.6624e-02, -1.2973e-02, -2.7613e-02,  1.0597e-02,4.2871e-02,  5.7475e-02, -3.1111e-02, -4.3955e-02, -2.0109e-02,3.7292e-02, -6.9090e-03, -1.5969e-02,  1.0714e-02, -7.0314e-03,7.0202e-02, -6.8809e-03,  5.5891e-03,  1.6595e-02,  4.2755e-02,-2.3598e-02,  1.9439e-02, -2.3352e-02,  6.4101e-02,  4.9861e-02,-2.1695e-02, -1.6590e-02, -7.7804e-03, -1.3583e-02,  3.5722e-02,-2.5540e-02,  2.4314e-02, -6.7700e-02,  9.6279e-03,  5.7035e-02,-2.2119e-02,  1.1705e-03, -7.3868e-04,  5.1447e-03,  3.3906e-02,-5.5838e-02,  4.3458e-02,  5.5981e-02, -3.0839e-02,  7.8849e-03,7.1746e-03,  6.2045e-02,  7.3123e-02,  9.9795e-03,  2.1241e-02,-1.9421e-02,  1.1779e-02, -2.0666e-02, -7.2813e-02,  1.8824e-02,2.8001e-02, -2.1217e-02,  3.1769e-03,  9.0115e-02,  1.7141e-02,-4.7875e-02, -7.9988e-02, -3.9790e-03, -4.7563e-02, -1.9007e-03,4.0566e-02,  3.3016e-02,  8.3778e-02, -2.7895e-02, -1.0740e-01,5.2536e-02, -1.4730e-02,  1.5264e-02, -2.5108e-02, -1.3934e-02,3.5743e-03,  3.0458e-02, -2.7272e-02, -4.9255e-02, -2.6336e-02,-3.3745e-02,  4.2749e-02,  8.7558e-02,  8.8933e-02, -7.3067e-02,-2.8282e-02,  9.9397e-02, -2.1009e-02, -6.4275e-02, -4.2843e-02,3.6165e-03, -3.0436e-02,  5.2629e-02,  3.4569e-02, -1.5125e-02,-2.6046e-02,  1.0043e-02, -3.1467e-02,  9.5136e-03, -2.1415e-03,-1.8461e-02, -1.6572e-02,  1.5360e-02, -3.8767e-02,  4.8966e-03,-2.0389e-02, -8.5772e-02, -3.2695e-02, -1.8629e-02,  9.3722e-02,-4.3560e-02, -4.3914e-02, -1.8166e-03, -7.2228e-02, -3.4837e-02,-6.4538e-02,  1.1176e-01,  4.4298e-02, -2.5030e-02,  5.5692e-02,8.5239e-02, -1.3605e-03,  1.2368e-02,  2.3828e-02, -5.0011e-02,3.3976e-02, -3.5058e-03,  8.6711e-02,  7.6955e-03, -1.9586e-02,-8.3159e-02, -1.8517e-02]]),grad_fn=<DivBackward0>"]

# new_encoding = "tensor([[ 7.1697e-02, -2.8683e-02, -3.6210e-02,  2.1911e-02, -5.7598e-02,2.6521e-02,  3.8647e-02,  7.8037e-02, -1.5708e-01,  2.7393e-02,-5.5143e-02, -1.2554e-03, -3.9393e-02, -6.1461e-03, -3.5951e-02,-2.4056e-02,  1.5278e-03,  1.3013e-02, -1.0975e-02, -7.3271e-02,-4.7854e-02,  1.9350e-02, -4.7147e-02, -4.9899e-03,  2.3131e-02,-9.2455e-02, -1.2900e-06,  2.3820e-02,  4.1667e-02,  5.2115e-03,1.1870e-02, -7.0610e-02,  6.7202e-03, -1.6267e-02, -2.8549e-02,-1.1337e-02, -3.1486e-02,  6.3529e-02,  4.6502e-03, -6.6293e-02,-3.4322e-02,  4.0164e-02,  5.3965e-02, -2.4562e-02,  6.7492e-02,2.3775e-02, -4.1418e-02, -1.1093e-01,  6.9857e-02,  2.6839e-02,4.0794e-03, -3.8106e-02,  5.5398e-02,  1.2558e-02, -1.9080e-02,8.5945e-03, -2.5593e-03,  2.3834e-02,  3.3320e-02,  6.3318e-03,-6.7813e-03, -6.1785e-02,  7.6637e-02,  4.0232e-02,  1.5532e-03,8.2659e-03,  7.9172e-02,  3.0135e-02,  4.8134e-02,  1.4366e-02,-8.1476e-02, -8.8970e-03,  4.4606e-02,  2.4464e-02, -2.5861e-02,-1.1373e-02, -1.4760e-04, -2.3706e-02,  9.1153e-02,  9.0128e-03,9.7070e-03,  2.9882e-02,  3.7087e-02,  2.3182e-02, -2.4904e-02,6.6626e-02, -4.2619e-02, -6.1886e-02,  5.2664e-02, -4.7202e-02,-1.6246e-02, -9.2088e-04, -5.0305e-02, -3.0502e-02, -6.4089e-02,-1.1652e-02, -4.9316e-05, -4.2656e-02,  1.1094e-02,  2.8855e-03,7.1454e-03, -2.0741e-02,  2.9566e-02, -3.0268e-02, -1.3333e-02,1.9388e-03, -3.8543e-02, -8.5022e-02, -2.2166e-02, -6.3050e-02,-7.3241e-02,  6.6212e-02,  4.7826e-02, -2.8638e-02,  4.0237e-02,-2.0297e-02,  3.1119e-03, -4.0826e-02, -6.0171e-03, -3.4372e-02,-5.9318e-02,  3.2514e-02, -1.0304e-02, -4.3477e-02, -8.3860e-03,3.7051e-02,  1.4314e-02,  3.7284e-03,  7.0785e-02,  7.7396e-02,-9.2950e-03, -2.6234e-02, -7.8840e-03,  7.7053e-02,  3.5185e-02,-6.4931e-02, -1.0356e-02,  5.6132e-02,  6.1505e-02,  7.2961e-03,1.3597e-03,  6.2191e-02,  8.0365e-02, -2.9209e-02, -8.1412e-02,7.0088e-02, -9.2728e-03, -3.3410e-02,  1.6996e-02,  1.0385e-01,8.2721e-03, -4.6780e-02, -4.5227e-02, -2.8053e-02, -3.4373e-04,1.4636e-02, -6.2592e-02, -5.9974e-02, -5.3231e-02,  9.3990e-03,-4.2368e-02, -4.3530e-02,  5.5002e-02, -2.8760e-02, -7.1724e-02,3.8024e-02, -4.0214e-02,  1.8333e-03,  2.1791e-02,  2.9908e-02,-2.4421e-02, -2.5069e-02,  2.0814e-02,  8.3625e-02, -2.9519e-02,6.0302e-02,  6.6871e-02,  7.0233e-02,  5.1876e-02, -5.7726e-02,-4.3298e-03, -6.7102e-02,  9.6962e-02, -4.2054e-02,  1.9020e-04,-5.8621e-02,  6.0194e-02, -5.2147e-02,  6.2159e-02, -1.9092e-02,1.7486e-02,  5.6618e-02, -2.0553e-02,  4.0630e-02,  6.1639e-03,7.8599e-02, -2.2376e-02, -1.4259e-03,  6.2450e-03, -3.2046e-02,-7.4247e-02,  8.8320e-02,  3.6483e-02, -3.2546e-02,  3.9878e-02,-1.3451e-02,  1.4119e-02,  8.5258e-02,  1.6548e-02, -5.9210e-02,-1.5547e-02,  4.5521e-02,  7.6128e-03,  6.5046e-02, -1.7772e-02,3.5866e-02, -2.0820e-02, -3.6712e-02, -8.7581e-02,  9.9428e-02,-3.4560e-04,  8.6054e-02, -8.7516e-03,  9.2648e-02, -9.5560e-03,-4.4159e-02,  2.5639e-04, -2.3867e-02,  1.6136e-02, -1.8270e-02,2.9029e-02,  4.2107e-02,  7.7673e-03, -6.4820e-02, -6.7326e-02,-7.3466e-02,  5.8045e-02,  3.7551e-02,  2.4552e-02, -4.8277e-02,2.1207e-02, -2.3014e-02, -5.8508e-02,  7.4545e-03, -4.0418e-02,-7.0750e-02,  1.9322e-02, -6.6053e-02, -2.7720e-02, -2.2444e-03,-1.5236e-02,  3.1355e-02, -4.6670e-02,  5.2228e-02, -6.8088e-02,-5.3020e-02, -2.3623e-02,  1.5375e-02, -3.5558e-02, -2.6266e-02,8.1140e-02,  3.7872e-02, -1.8785e-02, -1.3673e-02,  6.7165e-03,-1.9483e-03, -1.0873e-02, -7.9071e-03,  2.4417e-02, -3.9887e-02,1.8165e-02,  5.2467e-03,  3.3545e-02, -2.8558e-03, -7.0429e-02,-1.4553e-02,  1.8112e-02, -5.0665e-02,  5.6074e-02,  3.1472e-02,1.1929e-02,  2.0095e-02, -8.5767e-02, -4.3639e-02,  2.1689e-02,6.9528e-02,  2.1661e-03,  4.1336e-02,  3.0457e-02,  1.2864e-02,-6.1650e-02,  1.5845e-03,  7.7501e-04,  5.8803e-02,  6.6777e-02,1.6814e-02, -4.5421e-02,  5.3212e-02, -1.3014e-03, -2.7693e-02,6.8313e-02,  1.1559e-03,  7.2210e-02, -4.0190e-02,  9.4462e-04,2.7693e-02,  4.3379e-02, -3.8939e-02,  1.9611e-03,  8.3716e-02,2.1938e-02,  1.4870e-02, -7.1583e-03,  5.3486e-02,  4.8526e-02,-4.1892e-02, -2.7839e-02, -9.2360e-03, -3.9887e-02,  1.7685e-02,4.9409e-02, -4.2404e-02,  5.1235e-02, -2.9906e-02,  6.9078e-02,-2.8201e-02, -6.4008e-02, -1.1996e-01, -4.5528e-02, -5.8664e-02,2.1928e-02,  1.3748e-02, -5.4093e-02, -4.9697e-02, -8.1306e-03,2.9662e-02, -3.1619e-02,  2.1331e-02, -3.8991e-02,  2.9468e-02,7.4517e-03,  4.7505e-02,  3.3275e-02, -2.1494e-02, -7.1888e-02,-6.5220e-03, -5.6821e-02, -5.4199e-02,  6.4456e-02,  2.2399e-02,4.5859e-03, -1.8366e-02,  1.5890e-02, -3.5602e-02, -5.8480e-02,-3.6295e-03, -1.0526e-02,  6.7592e-02, -5.6216e-02, -6.2747e-02,-5.1464e-02, -3.6438e-02,  2.3680e-02,  9.9277e-02,  5.2020e-02,-4.5181e-03,  5.7477e-02,  3.6805e-02, -2.0525e-02,  4.5505e-02,2.5834e-02,  1.9854e-02,  1.1457e-02,  4.0573e-04, -6.9981e-02,-4.8563e-03, -2.9347e-02, -2.9756e-02, -6.2787e-03, -4.6633e-02,1.3289e-02,  4.6624e-02, -1.2973e-02, -2.7613e-02,  1.0597e-02,4.2871e-02,  5.7475e-02, -3.1111e-02, -4.3955e-02, -2.0109e-02,3.7292e-02, -6.9090e-03, -1.5969e-02,  1.0714e-02, -7.0314e-03,7.0202e-02, -6.8809e-03,  5.5891e-03,  1.6595e-02,  4.2755e-02,-2.3598e-02,  1.9439e-02, -2.3352e-02,  6.4101e-02,  4.9861e-02,-2.1695e-02, -1.6590e-02, -7.7804e-03, -1.3583e-02,  3.5722e-02,-2.5540e-02,  2.4314e-02, -6.7700e-02,  9.6279e-03,  5.7035e-02,-2.2119e-02,  1.1705e-03, -7.3868e-04,  5.1447e-03,  3.3906e-02,-5.5838e-02,  4.3458e-02,  5.5981e-02, -3.0839e-02,  7.8849e-03,7.1746e-03,  6.2045e-02,  7.3123e-02,  9.9795e-03,  2.1241e-02,-1.9421e-02,  1.1779e-02, -2.0666e-02, -7.2813e-02,  1.8824e-02,2.8001e-02, -2.1217e-02,  3.1769e-03,  9.0115e-02,  1.7141e-02,-4.7875e-02, -7.9988e-02, -3.9790e-03, -4.7563e-02, -1.9007e-03,4.0566e-02,  3.3016e-02,  8.3778e-02, -2.7895e-02, -1.0740e-01,5.2536e-02, -1.4730e-02,  1.5264e-02, -2.5108e-02, -1.3934e-02,3.5743e-03,  3.0458e-02, -2.7272e-02, -4.9255e-02, -2.6336e-02,-3.3745e-02,  4.2749e-02,  8.7558e-02,  8.8933e-02, -7.3067e-02,-2.8282e-02,  9.9397e-02, -2.1009e-02, -6.4275e-02, -4.2843e-02,3.6165e-03, -3.0436e-02,  5.2629e-02,  3.4569e-02, -1.5125e-02,-2.6046e-02,  1.0043e-02, -3.1467e-02,  9.5136e-03, -2.1415e-03,-1.8461e-02, -1.6572e-02,  1.5360e-02, -3.8767e-02,  4.8966e-03,-2.0389e-02, -8.5772e-02, -3.2695e-02, -1.8629e-02,  9.3722e-02,-4.3560e-02, -4.3914e-02, -1.8166e-03, -7.2228e-02, -3.4837e-02,-6.4538e-02,  1.1176e-01,  4.4298e-02, -2.5030e-02,  5.5692e-02,8.5239e-02, -1.3605e-03,  1.2368e-02,  2.3828e-02, -5.0011e-02,3.3976e-02, -3.5058e-03,  8.6711e-02,  7.6955e-03, -1.9586e-02,-8.3159e-02, -1.8517e-02]])"

# Initialize variables for minimum distance and index
min_dist = float('inf')
min_index = -1

# Initialize the variable to store the matched image filename
matched_image_filename = None
import re

new_encoding = str(new_encoding)
numerical_values_test = re.findall(r'[-+]?\d*\.?\d+(?:[eE][-+]?\d+)?', new_encoding)
# Convert the numerical values to floats and reshape them to a 2D list
new_encoding = [[float(num) for num in numerical_values_test]]
new_encoding = torch.tensor(new_encoding)

# Example string representation of a 2D tensor
# string_tensor = "tensor([[9.9397e-02, -2.1009e-02, -6.4275e-02, -4.2843e-02, 3.6165e-03, -3.0436e-02, 5.2629e-02, 3.4569e-02, -1.5125e-02, -2.6046e-02, 1.0043e-02, -3.1467e-02, 9.5136e-03, -2.1415e-03, -1.8461e-02, -1.6572e-02, 1.5360e-02, -3.8767e-02, 4.8966e-03, -2.0389e-02, -8.5772e-02, -3.2695e-02, -1.8629e-02, 9.3722e-02, -4.3560e-02, -4.3914e-02, -1.8166e-03, -7.2228e-02, -3.4837e-02, -6.4538e-02, 1.1176e-01, 4.4298e-02, -2.5030e-02, 5.5692e-02, 8.5239e-02, -1.3605e-03, 1.2368e-02, 2.3828e-02, -5.0011e-02, 3.3976e-02, -3.5058e-03, 8.6711e-02, 7.6955e-03, -1.9586e-02, -8.3159e-02, -1.8517e-02]])"

# # Extract numerical values from the string
# numerical_values = re.findall(r'[-+]?\d*\.\d+|\d+', string_tensor)

# # Convert the numerical values to floats and reshape them to a 2D list
# tensor_values = [[float(num) for num in numerical_values]]
# Calculate the distance between the target encoding and each reference encoding
for i, ref_encoding in enumerate(encodings):
    # Extract numerical values from the string
    numerical_values = re.findall(r'[-+]?\d*\.?\d+(?:[eE][-+]?\d+)?', ref_encoding)

# Convert the numerical values to floats and reshape them to a 2D list
    final_encoding = [[float(num) for num in numerical_values]]
    final_encoding = torch.tensor(final_encoding)
    print('tensor A: ',len(new_encoding[0]))
    print('\ntensor B: ',len(final_encoding[0]))
    dist = torch.norm(new_encoding - final_encoding).detach().numpy()
    
    # Update minimum distance and index if the current distance is smaller
    if dist < min_dist:
        min_dist = dist
        min_index = i

# Check if the minimum distance is less than the threshold
if min_dist <= threshold:
    match = True  # Match found
    # Retrieve the filename of the matched image
    matched_image_filename = os.listdir(image_folder)[min_index+7]
    # Retrieve the image that matches the minimum distance
    matched_image = faces[min_index+7]
    cv2.imshow("Matched Image", matched_image)
    cv2.waitKey(0)
    cv2.destroyAllWindows()
else:
    print("No match found.")

# Print the path of the matched image
if matched_image_filename:
    matched_image_path = os.path.join(image_folder, matched_image_filename)
    print('inserted image:',new_encoding)
    print("Path of the matched image:", matched_image_path)
else:
    print("No match found.")








#chatgpt
# Initialize variables for minimum distance and index
# min_dist = float('inf')
# min_index = -1

# # Calculate the distance between the target encoding and each reference encoding
# for i, ref_encoding in enumerate(encodings):
#     dist = torch.norm(new_encoding - ref_encoding).detach().numpy()
    
#     # Update minimum distance and index if the current distance is smaller
#     if dist < min_dist:
#         min_dist = dist
#         min_index = i

# # Check if the minimum distance is less than the threshold
# if min_dist <= threshold:
#     match = True  # Match found
#     # Retrieve the image that matches the minimum distance
#     matched_image = faces[min_index]
#     cv2.imshow("Matched Image", matched_image)
#     cv2.waitKey(0)
#     cv2.destroyAllWindows()
# else:
#     print("No match found.")




# # Initialize variables for minimum distance
# min_dist = float('inf')

# # Initialize match as False
# match = False

# # Calculate the distance between the target encoding and each reference encoding
# distances = []
# for ref_encoding in encodings:
#     dist = torch.norm(new_encoding - ref_encoding).detach().numpy()
#     distances.append(dist)

# # Check if any of the distances are less than the threshold
# for dist in distances:
#     print(dist)
#     if dist <= threshold:
#         match = True  # Match found

# if match:
#     print("Match found.")
# else:
#     print("No match found.")


